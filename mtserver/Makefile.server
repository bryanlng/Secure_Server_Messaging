CC		:= g++
CFLAGS		:= -c -std=c++11 -std=gnu++11
LDFLAGS		:= -lpthread
SOURCES		:= server.cpp ConnectionHandler.cpp MessageHandler.cpp UpdateHandler.cpp ../threads/thread.cpp ../tcpsockets/tcpacceptor.cpp ../tcpsockets/tcpstream.cpp
INCLUDES	:= -I../threads -I../wqueue -I../tcpsockets
OBJECTS		:= $(SOURCES:.cpp=.o)
GCOV		:= gcov
GCOVFLAGS 	:= -fprofile-arcs -ftest-coverage
VALGRIND 	:= valgrind
DOXYGEN 	:= doxygen
TARGET		:= server

all: $(SOURCES) $(TARGET)

$(TARGET): $(OBJECTS) 
	$(CC)  $(OBJECTS) -o $@ $(LDFLAGS)

.cpp.o:
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@
	
clean:
	rm -rf $(OBJECTS) $(TARGET)
	
html: Doxyfile *.h *.c++
	doxygen Doxyfile

TestServer: ConnectionHandler.h MessageHandler.h UpdateHandler.h MessageItem.h WorkItem.h ../tcpsockets/tcpacceptor.h ConnectionHandler.cpp MessageHandler.cpp UpdateHandler.cpp server.cpp
	$(CC) $(CFLAGS) $(GCOVFLAGS) TestServer.cpp -o TestServer $(LDFLAGS)
	
val_cov: TestServer
	$(VALGRIND) ./TestServer                                       >  val_cov.tmp 2>&1
	$(GCOV) -b TestServer.cpp | grep -A 5 "File 'TestServer.cpp'" >> val_cov.tmp
	cat val_cov.tmp

Doxyfile:
	doxygen -g
	
clear_all:
	rm -rf master_log.txt	